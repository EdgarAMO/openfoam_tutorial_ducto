/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh on;
snap            on;
addLayers       on;

geometry
{
    pipe
    {
        type triSurfaceMesh;
        file "pipe.stl";
        regions
        {
            inlet 
            {
                name inlet;
            }

            outlet1
            {
                name outlet1;
            }

            outlet2
            {
                name outlet2;
            }

            walls
            {
                name walls;
            }
        }
	}
};
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMeshControls
{
    maxLocalCells               800000;
    maxGlobalCells              1000000;
    minRefinementCells          10;
    maxLoadUnbalance            0.1;
    resolveFeatureAngle         10;
    nCellsBetweenLevels         3;
    allowFreeStandingZoneFaces  true;

    features
    (   
        { file "walls.eMesh"; level 3; }
    );

    refinementSurfaces
    {
        pipe
        {
            level ( 1 1 );
            regions
            {
                inlet
                {
                    level ( 1 1 );
                    patchInfo
                    {
                        type patch;
                    }
                }

                outlet1
                {
                    level ( 1 1 );
                    patchInfo
                    {
                        type patch;
                    }
                }

                outlet2
                {
                    level ( 1 1 );
                    patchInfo
                    {
                        type patch;
                    }
                }

                walls
                {
                    level ( 1 1 );
                    patchInfo
                    {
                        type wall;
                    }
                }
            }
        }
    }

    refinementRegions
    {
        walls
        {                             
          mode distance;            
          levels ((0.001 3) (0.005 2)); 
        }

        inlet
        {                             
          mode distance;            
          levels ((0.01 3) (0.05 2)); 
        }

		"outlet.*"
        {                             
          mode distance;            
          levels ((0.01 3) (0.025 2)); 
        }
    }

    locationInMesh (0.25 0 0);  
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

snapControls
{
    nSmoothPatch                5;
    tolerance                   2.0;
    nSolveIter                  30;
    nRelaxIter                  5;
    nFeatureSnapIter            10;
    implicitFeatureSnap         false; 
    explicitFeatureSnap         true;
    multiRegionFeatureSnap      false;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

addLayersControls
{
    layers
    {
        walls
        {
            nSurfaceLayers 5;
        } 
    }

    relativeSizes               true; 
    expansionRatio              1.2;
    finalLayerThickness         0.85;
    //firstLayerThickness       0.1;
    minThickness                0.025;

    nGrow                       0;

    featureAngle                120;
    slipFeatureAngle            30;

    nLayerIter                  50;
    nRelaxdIter                 20;
    nRelaxIter                  5;

    nSmoothSurfaceNormals       1;
    nSmoothNormals              3;
    nSmoothThickness            10;
    maxFaceThicknessRatio       0.5;
    maxThicknessToMedialRatio   0.3;

    minMedialAxisAngle          90;
    minMedianAxisAngle          90;
    nMedialAxisIter             10;

    nBufferCellsNoExtrude       0;
    additionalReporting         false;  
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

meshQualityControls
{
    maxNonOrtho                 65;
    maxBoundarySkewness         10;
    maxInternalSkewness         10;
    maxConcave                  80;
    minFlatness                 -1;
    minVol                      1e-13;
    minTetQuality               -1e30;   
    minArea                     -1;
    minTwist                    0.03;  
    minDeterminant              0.001;
    minFaceWeight               0.05; 
    minVolRatio                 0.01;
    minTriangleTwist            -1; 
    nSmoothScale                3;  
    errorReduction              0.75; 
}

/*writeFlags
(
//  scalarLevels
    layerSets
    layerFields
); */

mergeTolerance 1e-6;

// ************************************************************************* //
